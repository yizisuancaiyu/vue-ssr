(function(root,factory){var ucimws=factory(root);if(typeof define==="function"&&define.amd){define([],factory)}else{if(typeof module!=="undefined"&&module.exports){console.log("using module exports!");module.exports=factory()}else{root.ucimws=factory()}}}(this,function(root,undefined){if(!("WebSocket" in window)){return}var eventTarget=document.createElement("div"),settings={automaticOpen:true,reconnectDecay:1.5},func=function(){},_api={CONNECTING:WebSocket.CONNECTING,OPEN:WebSocket.OPEN,CLOSING:WebSocket.CLOSING,CLOSED:WebSocket.CLOSED};function ucimws(url,protocols,options){var self=this;this.url=url;this.readyState=WebSocket.CONNECTING;this.protocol=protocols?protocols:null;if(!options){options={}}for(var key in settings){if(typeof options[key]!=="undefined"){this[key]=options[key]}else{this[key]=settings[key]}}for(var a in _api){this[a]=_api[a]}eventTarget.addEventListener("open",function(event){self!==window&&self.onopen(event)});eventTarget.addEventListener("close",function(event){self!==window&&self.onclose(event)});eventTarget.addEventListener("connecting",function(event){self!==window&&self.onconnecting(event)});eventTarget.addEventListener("message",function(event){self!==window&&self.onmessage(event)});eventTarget.addEventListener("error",function(event){self!==window&&self.onerror(event)});this.addEventListener=eventTarget.addEventListener.bind(eventTarget);this.removeEventListener=eventTarget.removeEventListener.bind(eventTarget);this.dispatchEvent=eventTarget.dispatchEvent.bind(eventTarget);if(this.automaticOpen===true&&this!==window){this.open()}return this}ucimws.prototype.openEx=function(hostUrl){this.url=hostUrl;this.open()};function generateEvent(eventName,args){var evt=document.createEvent("CustomEvent");evt.initCustomEvent(eventName,false,false,args);return evt}ucimws.prototype.onconnecting=func;ucimws.prototype.onerror=func;ucimws.prototype.onopen=func;ucimws.prototype.onmessage=func;ucimws.prototype.send=function(data){if(this.wsocket){this.wsocket.send(data)}else{throw"INVALID_STATE_ERR : Pausing to reconnect websocket"}};ucimws.prototype.close=function(code,reason){if(typeof code==="undefined"){code=1000}if(this.wsocket){this.wsocket.close(code,reason)}};ucimws.prototype.open=function(){var self=this;var wsocket=new WebSocket(this.url,this.protocol||[]);eventTarget.dispatchEvent(generateEvent("connecting"));wsocket.onopen=function(){self.protocol=ucimws.protocol;self.readyState=WebSocket.OPEN;var e=generateEvent("open");eventTarget.dispatchEvent(e)};wsocket.onclose=function(event){self.readyState=WebSocket.CLOSED;var e=generateEvent("connecting");e.code=event.code;e.reason=event.reason;e.wasClean=event.wasClean;eventTarget.dispatchEvent(e);eventTarget.dispatchEvent(generateEvent("close"))};wsocket.onmessage=function(event){var e=generateEvent("message");e.data=event.data;eventTarget.dispatchEvent(e)};wsocket.onerror=function(){var e=generateEvent("error");eventTarget.dispatchEvent(e)};this.wsocket=wsocket;return this};return ucimws}));